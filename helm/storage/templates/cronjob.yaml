apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.name }}
spec:
  schedule: "0 0 * * 0"
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 20
      template:
        spec:
          imagePullSecrets:
            - name: {{ .Values.regCredName }} 
          containers:
          - name: {{ .Values.name }}
            command:
            - python
            - -m
            - storage 
            - backup 
            envFrom:
            - configMapRef:
                name: {{ .Values.name }}
            volumeMounts:
              - mountPath: /root/.aws ## root because container runs as root
                name: {{ .Values.name }}
              ### to backup
              - mountPath: /volumes/pypi-server
                name: pypi
              - mountPath: /volumes/data-postgres-0
                name: postgres
              - mountPath: /volumes/redis-data-redis-master-0
                name: redis
              - mountPath: /volumes/wireguard-pvc
                name: wireguard
              - mountPath: /volumes/tekkit2
                name: tekkit2
            securityContext: null
            image: {{ .Values.imageName }}
            imagePullPolicy: Always
            resources:
              limits:
                memory: 500Mi
              requests:
                memory: 500Mi
          restartPolicy: Never
          volumes:
            - name: {{ .Values.name }}
              secret:
                optional: false
                secretName: {{ .Values.name }}
            #### These are the volumes to backup 
            - name: pypi
              persistentVolumeClaim:
                claimName: pypi-server
            - name: postgres
              persistentVolumeClaim:
                claimName: data-postgres-0
            - name: redis
              persistentVolumeClaim:
                claimName: redis-data-redis-master-0
            - name: wireguard
              persistentVolumeClaim:
                claimName: wireguard-pvc
            - name: tekkit2
              persistentVolumeClaim:
                claimName: tekkit2
      backoffLimit: 1
